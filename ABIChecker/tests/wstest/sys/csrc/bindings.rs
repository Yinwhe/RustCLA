/* automatically generated by rust-bindgen 0.68.1 */

#[repr(C)]
#[derive(Debug)]
pub struct Hello {
    pub data: [::std::os::raw::c_char; 16usize],
    pub ptr: *mut ::std::os::raw::c_void,
}
extern "C" {
    #[link_name = "\u{1}_ZN5Hello8sayHelloEv"]
    pub fn Hello_sayHello(this: *mut Hello);
}
extern "C" {
    #[link_name = "\u{1}_ZN5HelloC1Ev"]
    pub fn Hello_Hello(this: *mut Hello);
}
extern "C" {
    #[link_name = "\u{1}_ZN5HelloD1Ev"]
    pub fn Hello_Hello_destructor(this: *mut Hello);
}
impl Hello {
    pub unsafe fn sayHello(&mut self) {
        Hello_sayHello(self)
    }
    pub unsafe fn new() -> Self {
        let mut __bindgen_tmp = ::std::mem::MaybeUninit::uninit();
        Hello_Hello(__bindgen_tmp.as_mut_ptr());
        __bindgen_tmp.assume_init()
    }
    pub unsafe fn destruct(&mut self) {
        Hello_Hello_destructor(self)
    }
}
